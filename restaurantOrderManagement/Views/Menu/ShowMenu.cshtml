@{
    ViewData["Title"] = "Menu Page";
}

@model restaurantOrderManagement.ViewModels.MenuViewModel

<style>
    body {
        font-family: 'Arial', sans-serif;
        background-color: #121212; /* Dark background */
        color: #e0e0e0; /* Light text for contrast */
        margin: 0;
        padding: 0;
    }

    h1 {
        color: #f4b400; /* Gold accent */
        text-align: center;
        margin-top: 20px;
        font-size: 2.5rem;
    }

    .table-container {
        max-width: 80%;
        margin: 30px auto;
        padding: 20px;
        background-color: #1e1e1e; /* Slightly lighter dark */
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.6);
    }

    .filter-container {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 10px;
        margin-bottom: 20px;
    }

    .dropdown {
        padding: 10px 15px; /* Adjust padding to match the search box */
        height: 100%; /* Ensures consistent height */
        border: 1px solid #333;
        border-radius: 4px;
        background-color: #1e1e1e; /* Match table background */
        color: #e0e0e0;
        font-size: 1rem;
        cursor: pointer;
    }


        .dropdown:focus {
            outline: none;
            border-color: #f4b400; /* Highlight on focus */
            box-shadow: 0 0 8px #f4b400;
        }

    .search-input {
        width: 100%;
        padding: 10px 15px;
        border: 1px solid #333;
        border-radius: 4px;
        background-color: #1e1e1e; /* Match table background */
        color: #e0e0e0;
        font-size: 1rem;
    }

        .search-input::placeholder {
            color: #888; /* Placeholder text color */
        }

        .search-input:focus {
            outline: none;
            border-color: #f4b400; /* Highlight on focus */
            box-shadow: 0 0 8px #f4b400;
        }

    .table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
    }

        .table th, .table td {
            text-align: left;
            padding: 12px 15px;
            border-bottom: 1px solid #444; /* Subtle border */
        }

        .table th {
            background-color: #333; /* Darker header */
            color: #f4b400; /* Gold text for header */
            font-weight: bold;
            text-transform: uppercase;
        }

        .table tr {
            background-color: #1e1e1e; /* Row background color */
            color: #e0e0e0; /* Lighter text */
        }

            .table tr:nth-child(even) {
                background-color: #2a2a2a; /* Alternating row color */
            }

            .table tr:hover {
                background-color: #444; /* Highlight on hover */
                transition: background-color 0.3s;
            }

        /* .table td:nth-child(3), /* Category column */ */
        /* .table td:nth-child(4) /* Price column */ { */
        /*     text-align: center; /* Center alignment */ */
        /* } */


    .no-data {
        text-align: center;
        padding: 20px;
        color: #888;
        font-style: italic;
    }
</style>

<div class="table-container">
    <h1 class="display-4">Menu List</h1>

    <div class="filter-container">
        <select id="categoryDropdown" class="dropdown">
            <option value="All">All Categories</option>
            @foreach (var category in Model.menuItems.Select(m => m.categoryname).Distinct())
            {
                <option value="@category">@category</option>
            }
        </select>
        <input type="text" id="searchInput" class="search-input" placeholder="Search for food items...">
    </div>

    @if (Model.menuItems != null && Model.menuItems.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Food Name</th>
                    <th>Description</th>
                    <th>Category</th>
                    <th>Price</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var menuitem in Model.menuItems)
                {
                    <tr data-category="@menuitem.categoryname">
                        <td>@menuitem.foodname</td>
                        <td>@menuitem.fooddescription</td>
                        <td>@menuitem.categoryname</td>
                        <td>@menuitem.foodprice</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="no-data">No menu items available.</div>
    }
</div>

<script>
    const categoryDropdown = document.getElementById('categoryDropdown');
    const searchInput = document.getElementById('searchInput');

    function filterMenu() {
        const selectedCategory = categoryDropdown.value.toLowerCase();
        const searchFilter = searchInput.value.toLowerCase();
        const rows = document.querySelectorAll('.table tbody tr');

        rows.forEach(row => {
            const category = row.getAttribute('data-category').toLowerCase();
            const text = row.innerText.toLowerCase();

            const categoryMatch = selectedCategory === 'all' || category === selectedCategory;
            const searchMatch = text.includes(searchFilter);

            row.style.display = categoryMatch && searchMatch ? '' : 'none';
        });
    }

    categoryDropdown.addEventListener('change', filterMenu);
    searchInput.addEventListener('input', filterMenu);
</script>
